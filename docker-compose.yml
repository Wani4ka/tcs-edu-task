version: '3.9'
services:

  scrapper:
    image: ghcr.io/wani4ka/tcs-edu-scrapper:hw10
    container_name: lscrapper
    healthcheck:
      test: "wget --no-verbose --tries=1 -qO- localhost:8083/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    depends_on:
      queue:
        condition: service_healthy
      postgresql:
        condition: service_healthy
      liquibase-migrations:
        condition: service_completed_successfully
    env_file: ['.env']
    networks: ['backend']

  bot:
    image: ghcr.io/wani4ka/tcs-edu-bot:hw10
    container_name: links_bot
    depends_on:
      queue:
        condition: service_healthy
      scrapper:
        condition: service_healthy
    env_file: ['.env']
    networks: ['backend']

  queue:
    image: rabbitmq:3-management
    container_name: links_queue
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "15672:15672"
    networks: ['backend']
    volumes:
      - queue:/var/lib/rabbitmq

  postgresql:
    image: postgres:15
    container_name: links_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: scrapper
    env_file: ['.env']
    networks: ['backend']
    volumes:
      - links_db:/var/lib/postgresql/data

  liquibase-migrations:
    image: liquibase/liquibase:4.18
    depends_on: ['postgresql']
    command:
      - --hub-mode=off
      - --changelog-file=master.xml
      - --url=jdbc:postgresql://postgresql:5432/scrapper
      - --username=${POSTGRES_USER}
      - --password=${POSTGRES_PASSWORD}
      - update
    env_file: ['.env']
    volumes:
      - ./migrations:/liquibase/changelog
    networks: ['backend']

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks: ['backend']

  grafana:
    image: grafana/grafana-oss
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    networks: ['backend']

volumes:
  links_db:
  queue:
  prometheus:
  grafana:

networks:
  backend:
    driver: bridge
